//Performing Searchning in arrays in C++
//Return 1 if found and -1 if not found.
/*Example:-
	I/P:- arr[] = {20, 5, 7, 25}
          x = 5		
	O/P:- 1
*/

int search(int arr[], int n, int x) {
  for(int i = 0; i < n; i++)
    if(arr[i] == x)
      return 1;
  return -1;
}

//TIME COMPLEXITY:- O(n)

//Performing insertion in arrays in C++
//Return the size of the new array after insertion.
/*!In case of insertion we've to make sure that if we have a fixed array
then the capacity of the array is not full yet otherwie no insertion
operation can be performed!*/

/*
	Example:-
    	I/P:- arr[] = {5, 10, 20, _, _}
        	  x = 9
              pos = 2
        Return the new size now to the main function.
        then,
        O/P:- arr[] = {5, 9, 10, 20, _}
*/

int insertion(int arr[], int size, int capacity, int x, int pos) {
	if(n == cap)
      return n;
  	int idx = pos - 1; // Because in C++ & many other languages arrays begin from index 0.
	for(int i = n-1; i >= idx; i--)
      arr[i+1] = arr[i];
  	arr[idx] = x;
  	return n+1;
}

//TIME COMPLEXITY:- O(n)
